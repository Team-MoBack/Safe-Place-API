/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id "org.sonarqube" version "2.7"
}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.4.RELEASE'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.20.Final'
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.4.20.Final'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
    implementation 'org.springframework.kafka:spring-kafka:2.7.0'
    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.3.4.RELEASE'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.3.0.RELEASE'
    implementation 'org.springframework.session:spring-session-data-redis:2.3.0.RELEASE'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.3.4.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java:8.0.21'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testImplementation group: 'ch.vorburger.mariaDB4j', name: 'mariaDB4j', version: '2.2.3'
}

group = 'com.moBack'
version = '0.0.1-SNAPSHOT'
description = 'backend'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

ext.profile = (!project.hasProperty('profile') || !profile) ? '' : profile

sourceSets {
	main {
		resources {
			srcDirs "src/main/resources/${profile}"
		}
	}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

